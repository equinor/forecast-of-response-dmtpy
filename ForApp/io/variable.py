# This an autogenerated file
# 
# Generated with Variable
from dmt.entity import Entity
from dmt.blueprint import Blueprint
from .blueprints.variable import VariableBlueprint
from typing import Dict

class Variable(Entity):
    """
    
    
    Keyword arguments
    -----------------
    name : str 
         (default "")
    description : str 
         (default "")
    value : str 
         (default "")
    valueType : str 
         (default "")
    unit : str 
         (default "")
    """

    def __init__(self , name:str="", description:str="", value:str="", valueType:str="", unit:str="", **kwargs):
        self.__name = name
        self.__description = description
        self.__value = value
        self.__valueType = valueType
        self.__unit = unit
        for key, value in kwargs.items():
            if not isinstance(value, Dict):
                setattr(self, key, value)


    @property
    def blueprint(self) -> Blueprint:
        """Return blueprint that this entity represents"""
        return VariableBlueprint()


    @property
    def name(self) -> str:
        """"""
        return self.__name

    @name.setter
    def name(self, value: str):
        """Set name"""
        self.__name = str(value)

    @property
    def description(self) -> str:
        """"""
        return self.__description

    @description.setter
    def description(self, value: str):
        """Set description"""
        self.__description = str(value)

    @property
    def value(self) -> str:
        """"""
        return self.__value

    @value.setter
    def value(self, value: str):
        """Set value"""
        self.__value = str(value)

    @property
    def valueType(self) -> str:
        """"""
        return self.__valueType

    @valueType.setter
    def valueType(self, value: str):
        """Set valueType"""
        self.__valueType = str(value)

    @property
    def unit(self) -> str:
        """"""
        return self.__unit

    @unit.setter
    def unit(self, value: str):
        """Set unit"""
        self.__unit = str(value)
